version: "3.3"

services:
  django:
    build:
      context: rgram
      dockerfile: Dockerfile
    ports:
        - "8000:8000"
    volumes:
        - ./rgram:/rgram
    command:
       python3 manage.py runserver 0.0.0.0:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`django.localhost`)"


  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - default

  traefik:
    image: "traefik:v2.9"
    restart: always
    container_name: "traefik"
    ports:
      - "443:443"
      - "8080:8080"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.filename=traefik_dynamic.toml"
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`django.localhost`)"
      - "traefik.http.routers.django.tls=true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik_config/traefik_dynamic.toml:/traefik_dynamic.toml:ro"


  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx:/etc/nginx/html
    ports:
      - "4433:80"
    environment:
      - NGINX_HOST=Rgram.org
      - NGINX_PORT=80

  centrifugal:
    image: centrifugo/centrifugo
    command: centrifugo --config=config.json --admin
    ports:
      - "8099:8000"
    volumes:
      - "./centrifugal:/centrifugo"
    ulimits:
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536

  postgres:
    container_name: postgres
    image:
      postgres:13
    volumes:
      - "./postgres/data:/var/lib/postgresql/data/pgdata"
    env_file:
      - evn/pg.evn
    restart:
      always
    ports:
      - "5555:5432"

  influxdb:
    image: influxdb:1.8
    container_name: "influxdb"
    restart: always
    volumes:
      - "./influxdb:/var/lib/influxdb"
    env_file:
      - evn/influxdb.evn
    ports:
      - "8086:8086"

  grafana:
      image: grafana/grafana:7.3.4
      container_name: "grafana"
      restart: always
      volumes:
        - "/grafana:/var/lib/grafana"
      environment:
        - GF_DATE_FORMATS_DEFAULT_TIMEZONE=browser
      ports:
        - "3000:3000"
      user: "472"

  redis:
    container_name: redis_rgrams
    image:
      redis:alpine
    ports:
      - "6390:6390"
    command:
      - 'redis-server'
      - '--loglevel ${REDIS_LOGLEVEL:-warning}'
      - '--databases 2'
      - '--maxmemory ${REDIS_MAXMEM:-50mb}'
      - '--maxmemory-policy ${REDIS_POLICY:-noeviction}'
    volumes:
      - ../data/redis:/data
    restart: always

  memcached:
    image: memcached
    ports:
      - "11211:11211"
    command:
      - '-m 64'

  adminer:
    image:
      adminer
    restart:
      always
    ports:
      - "9080:8080"
